doctype html(lang='en')
head
    meta(charset='utf-8')
    title PHT Arduinos Sensors
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name='description', content='')
    meta(name='author', content='')

    link(href='stylesheets/bootstrap.min.css', rel='stylesheet')
    link(href='stylesheets/style.css', rel='stylesheet')
    // HTML5 shim, for IE6-8 support of HTML5 elements
    //if lt IE 9
      script(src='javascripts/html5shiv.js')
    // Fav and touch icons
    link(rel='apple-touch-icon-precomposed', sizes='144x144', href='img/apple-touch-icon-144-precomposed.png')
    link(rel='apple-touch-icon-precomposed', sizes='114x114', href='img/apple-touch-icon-114-precomposed.png')
    link(rel='apple-touch-icon-precomposed', sizes='72x72', href='img/apple-touch-icon-72-precomposed.png')
    link(rel='apple-touch-icon-precomposed', href='img/apple-touch-icon-57-precomposed.png')
    link(rel='shortcut icon', href='img/favicon.png')
    script(type='text/javascript', src='/socket.io/socket.io.js')
    script(type='text/javascript', src='javascripts/jquery.min.js')
    link(href='http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css', rel='stylesheet')
    script(type='text/javascript', src="//code.jquery.com/ui/1.11.4/jquery-ui.js")
    script(type='text/javascript', src='javascripts/bootstrap.min.js')
    script(type='text/javascript', src='javascripts/scripts.js')
    //http://www.virtuosoft.eu/code/bootstrap-colorpickersliders/
    link(href='javascripts/bootstrap.colorpickersliders.css', rel='stylesheet')
    script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/tinycolor/0.11.1/tinycolor.min.js')
    
    script(type='text/javascript', src='javascripts/bootstrap.colorpickersliders.js')
    //script(type='text/javascript', src='javascripts/jquery.flot.min.js')
    //script(type='text/javascript', src='javascripts/jquery.flot.time.min.js')
    script(type='text/javascript', src='javascripts/one-color-all.js')

    script(type='text/javascript').
      var arduinoPort, arduinoVersion;
      var now;
      var timeTick=0;
      var RAW= [];
      var RGB= [];
      var RGB2= [];
      var fBlack =[];
      var fWhite=[];
      var Correction=[];
      var myColor,hueColor;
      fBlack[0] = 4; 
      fBlack[1] = 4;
      fBlack[2] = 5;
      fWhite[0]= 50;
      fWhite[1]= 46;
      fWhite[2]= 70;
      Correction[0] = 30;
      Correction[1] = 0;
      Correction[2] = 0;

      var colorName = {
        "2 Pale lager, Witbier, Pilsener, Berliner Weisse": "#F6F513",
        "3 Maibock, Blonde Ale ": "#F6F513",
        "4 Weissbier ": "#ECE61A",
        "6 American Pale Ale, India Pale Ale ": "#D5BC26",
        "8 Weissbier, Saison ": "#BF923B",
        "10 English Bitter, ESB ": "#BF813A",
        "13 Biere de Garde, Double IPA ": "#BC6733",
        "17 Dark lager, Vienna lager, Marzen, Amber Ale ": "#8D4C32",
        "20 Brown Ale, Bock, Dunkel, Dunkelweizen ": "#5D341A",
        "24 Irish Dry Stout, Doppelbock, Porter ": "#261716",
        "29 Stout ": "#0F0B0A",
        "35 Foreign Stout, Baltic Porter ": "#080707",
        "40+ Imperial Stout ": "#030403",
      };
      function toggle(button){
        if(document.getElementById("buttonToggle").value=="OFF"){
          socket.emit('button update event', { status: 'OFF' });
        }
        else if(document.getElementById("buttonToggle").value=="ON"){
          socket.emit('button update event', { status: 'ON' });
        }
      }
      function startTicker() {
          setInterval(function () {
              $('#div_tick').text(timeTick-- +":t");
          }, 1000);
      }
      $(function() {
        //alert('Hello, ' + one.color('#650042').lightness(.3).green(.4).hex() + ' world!');
        $( "#slider_RB" ).slider({min: 0,max: 100,value: fBlack[0],slide: function( event, ui ) {$( "#value_RB" ).text( "RB:" + ui.value );fBlack[0]=ui.value;update(); }});
        $( "#slider_GB" ).slider({min: 0,max: 100,value: fBlack[1],slide: function( event, ui ) {$( "#value_GB" ).text( "GB:" + ui.value );fBlack[1]=ui.value;update(); }});
        $( "#slider_BB" ).slider({min: 0,max: 100,value: fBlack[2],slide: function( event, ui ) {$( "#value_BB" ).text( "BB:" + ui.value );fBlack[2]=ui.value;update(); }});
        $( "#slider_RW" ).slider({min: 10,max: 200,value: fWhite[0],slide: function( event, ui ) {$( "#value_RW" ).text( "RW:" + ui.value );fWhite[0]=ui.value;update(); }});
        $( "#slider_GW" ).slider({min: 10,max: 200,value: fWhite[1],slide: function( event, ui ) {$( "#value_GW" ).text( "GW:" + ui.value );fWhite[1]=ui.value;update();  }});
        $( "#slider_BW" ).slider({min: 10,max: 200,value: fWhite[2],slide: function( event, ui ) {$( "#value_BW" ).text( "BW:" + ui.value );fWhite[2]=ui.value;update();  }});

        $( "#slider_RM" ).slider({min: -100,max: 100,value: Correction[0],slide: function( event, ui ) {$( "#value_RM" ).text( "RM:" + ui.value );Correction[0]=ui.value;update(); }});
        $( "#slider_GM" ).slider({min: -100,max: 100,value: Correction[1],slide: function( event, ui ) {$( "#value_GM" ).text( "GM:" + ui.value );Correction[1]=ui.value;update(); }});
        $( "#slider_BM" ).slider({min: -100,max: 100,value: Correction[2],slide: function( event, ui ) {$( "#value_BM" ).text( "BM:" + ui.value );Correction[2]=ui.value;update(); }});
        $( "#setBlack").click( function(){
             console.log('button clicked');
             fBlack[0] = RAW[0]; $( "#slider_RB" ).slider('value', fBlack[0]); $( "#value_RB" ).text( "RB:" + fBlack[0] );
             fBlack[1] = RAW[1]; $( "#slider_GB" ).slider('value', fBlack[1]); $( "#value_GB" ).text( "GB:" + fBlack[1] );
             fBlack[2] = RAW[2]; $( "#slider_BB" ).slider('value', fBlack[2]); $( "#value_BB" ).text( "BB:" + fBlack[2] );
           }
        );
        $( "#setWhite").click( function(){
              console.log('button clicked');
             fWhite[0] = RAW[0]; $( "#slider_RW" ).slider('value', fWhite[0]);$( "#value_RW" ).text( "RW:" + fWhite[0] );
             fWhite[1] = RAW[1]; $( "#slider_GW" ).slider('value', fWhite[1]);$( "#value_GW" ).text( "GW:" + fWhite[1] );
             fWhite[2] = RAW[2]; $( "#slider_BW" ).slider('value', fWhite[2]);$( "#value_BW" ).text( "BW:" + fWhite[2] );
           }
        );
        $("#flot1").ColorPickerSliders({
          color: "rgb(36, 170, 242)",
          flat: true,
          previewformat: 'hsl',
          order: {
              hsl: 1,
              preview: 2
          }
        });
        startTicker();
        //$('.saveFileCheckbox').prop('checked', true);
        $('#saveFileCheckbox').change(function () {
          if($('#saveFileCheckbox').is(':checked')){
            //console.log('save file true');
            socket.emit('saveFile', { saveFile: 'true' });
          }else{
            //console.log('save file false');
            socket.emit('saveFile', { saveFile: 'false' });
          }
        });
        var socket = io();
        var Raw=[];
        var i =0;
        socket.on('serverStartTicker', function (interval) {
          //console.log(interval.logInterval);
          timeTick = interval.logInterval /1000;
        });   
        socket.on('new_data', function (data) {
          now = ((new Date()).getTime());
          var index = 0;
          RAW[0]=data.RAW_R;
          RAW[1]=data.RAW_G;
          RAW[2]=data.RAW_B;
          update();
          $('#div_an0').text("R:"+data.RAW_R);
          $('#div_an1').text("G:"+data.RAW_G);
          $('#div_an2').text("B:"+data.RAW_B);
          $('#div_R').text("R:"+RGB2[0].toFixed(2));
          $('#div_G').text("G:"+RGB2[1].toFixed(2));
          $('#div_B').text("B:"+RGB2[2].toFixed(2));
          $('#div_RGB').css('background-color','rgb(' + RGB2[0] + ',' + RGB2[1] + ',' + RGB2[2] + ')');
          //console.log(d0);
          //socket.emit('my other event', { my: 'client do server' });
        });
        function update() {
          var i;
          for (i=0; i<3; i++) {
            RGB2[i] = Math.floor(((RAW[i] - fBlack[i]) * 255.0 )/(fWhite[i] - fBlack[i]) );
            RGB2[i] += Correction[0];
            if (RGB2[i] < 0) RGB2[i]=0;
            if (RGB2[i] > 255) RGB2[i]=255;
          };
          var myColor = one.color('rgb(' + RGB2[0] + ',' + RGB2[1] + ',' + RGB2[2] + ')');
          $("#flot1").trigger("colorpickersliders.updateColor", myColor.css());
          //hueColor = myColor.saturation(1).value(1);
          //huecolor = hueColor.red(0);
          //$('#div_oneColor').css('background-color','rgb(' + hueColor.red() + ',' + hueColor.green() + ',' + hueColor.blue() + ')');
      //    $('#div_oneColor').css('background-color',myColor.css());
          var angulo = myColor.hue() * 360;
          var foundColorName = angulo;
          //se for amarelo
          if ( angulo < 60){
            $.each(colorName, function(key, value) {
                //console.log(key + value);
                if (myColor.equals(one.color(value), 0.1)) {
                    foundColorName = key;
                    
                }
            });
          }
          $('#div_foundColorName').text(foundColorName);

          $('#div_oneColor').css('background-color',one.color('hsl(' + myColor.hue()*360 + ',' + 100 + ',' + 50 + ')').css());
          $('#div_oneColor').text(myColor.hue().toFixed(2)) ;

        }
      });


  body
    .container
      .row.clearfix
        .col-md-12.column
          nav.navbar.navbar-default(role='navigation')
            .navbar-header
              button.navbar-toggle(type='button', data-toggle='collapse', data-target='#bs-example-navbar-collapse-1')
                span.sr-only Toggle navigation
                span.icon-bar
                span.icon-bar
                span.icon-bar
              |  
              a.navbar-brand(href='#') PHT
            #bs-example-navbar-collapse-1.collapse.navbar-collapse
              ul.nav.navbar-nav
                li.active
                  a(href='#') Link
                li
                  a(href='#') Link
                li.dropdown
                  a.dropdown-toggle(href='#', data-toggle='dropdown')
                    | Dropdown
                    strong.caret
                  ul.dropdown-menu
                    li
                      a(href='#') Action
                    li
                      a(href='#') Another action
                    li
                      a(href='#') Something else here
                    li.divider
                    li
                      a(href='#') Separated link
                    li.divider
                    li
                      a(href='#') One more separated link
              form.navbar-form.navbar-left(role='search')
                .form-group
                  input.form-control(type='text')
                |  
                button.btn.btn-default(type='submit') Submit
              ul.nav.navbar-nav.navbar-right
                li
                  a(href='#') Link
                li.dropdown
                  a.dropdown-toggle(href='#', data-toggle='dropdown')
                    | Dropdown
                    strong.caret
                  ul.dropdown-menu
                    li
                      a(href='#') Action
                    li
                      a(href='#') Another action
                    li
                      a(href='#') Something else here
                    li.divider
                    li
                      a(href='#') Separated link
      .row.clearfix
        .col-md-8.column
          h3 Color Sensor
          p
          #slider_RB
          p
          #slider_RM
          p
          #slider_RW
          p x
          p
          #slider_GB
          p
          #slider_GM
          p
          #slider_GW
          p x
          p
          #slider_BB
          p
          #slider_BM
          p
          #slider_BW
          p
          #flot1.demo-flot(style="width:760px;height:200px")
          #footer
            #div_RGB.beerLabel(style="background-color:#c0c0c0") -
            #div_foundColorName.beerLabel -
            
            include beer_colors.jade

        .col-md-2.column
          h3
            | Color Sensor
          #value_RB RB:
          #value_RM RM:
          #value_RW RW:
          #value_GB GB:
          #value_GM GM:
          #value_GW GW:
          #value_BB BB:
          #value_BM BM:
          #value_BW BW:
          #setBlack.btn.btn-default Set Black
          #setWhite.btn.btn-default Set White
        .col-md-2.column
          #div_tick.analogLabel.colorTick :t
          #div_an0.analogLabel.colorA0(style="color:#FF0000") R
          #div_an1.analogLabel.colorA1(style="color:#00FF00") G
          #div_an2.analogLabel.colorA2(style="color:#0000FF") B
          #div_R.analogLabel.colorA3(style="color:#FF0000") R
          #div_G.analogLabel.colorA4(style="color:#00FF00") G
          #div_B.analogLabel.colorA5(style="color:#0000FF") B
          #div_oneColor.analogLabel(style="background-color:#c0c0c0") oneColor


          //span.label.label-default Label
          //|  
          //span.label.label-default Label
          form(role='form')
            .checkbox
              label
                input#saveFileCheckbox(type='checkbox')
                |  Save file
